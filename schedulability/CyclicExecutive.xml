<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int N=7;
typedef int [1,N] id_t;

const int minor_cycle = 320000;
const int major_cycle = 1600000;

bool pwm = false;
int sensors = N-2;
const int sensor_count = N-2;

chan ready, release;
urgent chan run;

clock time;</declaration>
	<template>
		<name>NAVIGATION</name>
		<parameter>const id_t id, const int T, const int C</parameter>
		<declaration>// Place local declarations here.
clock t, c;</declaration>
		<location id="id0" x="68" y="68">
			<name x="85" y="59">ERR</name>
		</location>
		<location id="id1" x="-68" y="136">
			<name x="-51" y="136">Running</name>
			<label kind="invariant" x="-51" y="153">c&lt;=C &amp;&amp;
t&lt;=T</label>
		</location>
		<location id="id2" x="-68" y="0">
			<name x="-127" y="-8">Ready</name>
			<label kind="invariant" x="-127" y="8">t&lt;=T</label>
		</location>
		<location id="id3" x="-68" y="-136">
			<name x="-78" y="-170">Idle</name>
			<label kind="invariant" x="-51" y="-144">t&lt;=T</label>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id1"/>
			<target ref="id3"/>
			<label kind="guard" x="-314" y="-8">c==C</label>
			<label kind="synchronisation" x="-322" y="8">release!</label>
			<label kind="assignment" x="-433" y="25">sensors = sensor_count</label>
			<nail x="-255" y="136"/>
			<nail x="-255" y="-136"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="25" y="110">t==T</label>
			<nail x="68" y="136"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="17" y="-25">t==T</label>
			<nail x="68" y="0"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="guard" x="-195" y="51">sensors == 0 &amp;&amp;
pwm == true</label>
			<label kind="synchronisation" x="-119" y="85">run?</label>
			<label kind="assignment" x="-119" y="102">c=0</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-59" y="-102">t==T</label>
			<label kind="assignment" x="-59" y="-85">t=0</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">SENSOR</name>
		<parameter>const id_t id, const int T, const int C</parameter>
		<declaration>// Place local declarations here.
clock t, c;</declaration>
		<location id="id4" x="68" y="68">
			<name x="85" y="59">ERR</name>
		</location>
		<location id="id5" x="-68" y="136">
			<name x="-51" y="136">Running</name>
			<label kind="invariant" x="-51" y="153">c&lt;=C &amp;&amp;
t&lt;=T</label>
		</location>
		<location id="id6" x="-68" y="0">
			<name x="-127" y="-8">Ready</name>
			<label kind="invariant" x="-127" y="8">t&lt;=T</label>
		</location>
		<location id="id7" x="-68" y="-136">
			<name x="-78" y="-170">Idle</name>
			<label kind="invariant" x="-51" y="-144">t&lt;=T</label>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="guard" x="-306" y="-8">c==C</label>
			<label kind="synchronisation" x="-314" y="8">release!</label>
			<label kind="assignment" x="-323" y="25">sensors--</label>
			<nail x="-255" y="136"/>
			<nail x="-255" y="-136"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="guard" x="68" y="136">t==T</label>
			<nail x="68" y="136"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
			<label kind="guard" x="68" y="-17">t==T</label>
			<nail x="68" y="0"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-178" y="76">sensors&gt;0 &amp;&amp;
pwm == true</label>
			<label kind="synchronisation" x="-110" y="42">run?</label>
			<label kind="assignment" x="-110" y="59">c=0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="guard" x="-59" y="-110">t==T</label>
			<label kind="assignment" x="-59" y="-93">t=0</label>
		</transition>
	</template>
	<template>
		<name>PWM</name>
		<parameter>const id_t id, const int T, const int C</parameter>
		<declaration>// Place local declarations here.
clock t, c;</declaration>
		<location id="id8" x="-51" y="-119">
			<name x="-61" y="-153">Idle</name>
			<label kind="invariant" x="-34" y="-127">t&lt;=T</label>
		</location>
		<location id="id9" x="85" y="85">
			<name x="102" y="76">ERR</name>
		</location>
		<location id="id10" x="-51" y="153">
			<name x="-34" y="153">Running</name>
			<label kind="invariant" x="-34" y="170">c&lt;=C &amp;&amp;
t&lt;=T</label>
		</location>
		<location id="id11" x="-51" y="17">
			<name x="-110" y="9">Ready</name>
			<label kind="invariant" x="-110" y="25">t&lt;=T</label>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="guard" x="-297" y="0">c==C</label>
			<label kind="synchronisation" x="-306" y="25">release!</label>
			<label kind="assignment" x="-331" y="51">pwm = true</label>
			<nail x="-246" y="153"/>
			<nail x="-246" y="-119"/>
			<nail x="-229" y="-119"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="85" y="153">t==T</label>
			<nail x="85" y="153"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id9"/>
			<label kind="guard" x="76" y="0">t==T</label>
			<nail x="85" y="17"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-42" y="76">run?</label>
			<label kind="assignment" x="-42" y="93">c=0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id11"/>
			<label kind="guard" x="-34" y="-110">t==T</label>
			<label kind="assignment" x="-34" y="-93">t=0,
pwm=false</label>
		</transition>
	</template>
	<template>
		<name>CPU</name>
		<location id="id12" x="-102" y="34">
			<name x="-112" y="0">USED</name>
		</location>
		<location id="id13" x="-102" y="-102">
			<name x="-112" y="-136">IDLE</name>
		</location>
		<init ref="id13"/>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-246" y="-42">release?</label>
			<nail x="-170" y="34"/>
			<nail x="-170" y="-102"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-25" y="-51">run!</label>
			<nail x="-34" y="-102"/>
			<nail x="-34" y="34"/>
		</transition>
	</template>
	<system>// Place template instantiations here.

/*
PrA = TASK(1,25,10, channels);
PrB = TASK(2,25,2, channels);
PrC = TASK(3,50,5, channels);
PrD = TASK(4,50,4, channels);
PrE = TASK(5,101,2, channels);

// List one or more processes to be composed into a system.
system PrA, PrB, PrC, PrD, PrE, CPU;

*/

// LaserRightTask = SENSOR(5,major_cycle,242432/3);
// PWMTask =        PWM(1,minor_cycle,389629);
// SonarTask =      SENSOR(2, major_cycle,242432);

PWMTask        = PWM(1,minor_cycle,50000);
SonarTask      = SENSOR(2,major_cycle,241551);
LaserLeftTask  = SENSOR(3,major_cycle,80810);
LaserFrontTask = SENSOR(4,major_cycle,80810);
LaserRightTask = SENSOR(5,major_cycle,80810);
IRTask         = SENSOR(6,major_cycle,98);
NavigationTask = NAVIGATION(7, major_cycle,150000);

system PWMTask, SonarTask, LaserLeftTask, LaserFrontTask, LaserRightTask, IRTask, NavigationTask, CPU;</system>
	<queries>
		<query>
			<formula>E[] not (SonarTask.ERR or LaserLeftTask.ERR or LaserFrontTask.ERR or LaserRightTask.ERR or PWMTask.ERR or IRTask.ERR or NavigationTask.ERR)
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; (SonarTask.Ready and LaserLeftTask.Ready and LaserFrontTask.Ready and LaserRightTask.Ready and PWMTask.Ready and IRTask.Ready and NavigationTask.Ready and SonarTask.t==0 and LaserLeftTask.t==0 and LaserFrontTask.t==0 and LaserRightTask.t==0 and PWMTask.t==0 and IRTask.t==0 and NavigationTask.t==0 and time&gt;0)
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
